# Do not modify this file!  It was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, nixos-hardware, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    nixos-hardware.nixosModules.raspberry-pi-4
  ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/44444444-4444-4444-8888-888888888888";
    fsType = "ext4";
  };

  # Other hardware-specific configurations can go here
  hardware.enableRedistributableFirmware = true;

  boot = {
    loader = {
      grub.enable = false;
      generic-extlinux-compatible.enable = true;
    };

    tmp.useTmpfs = true;
    tmp.tmpfsSize = "50%"; # Depends on the size of your storage.

    kernelPackages = pkgs.linuxPackages_rpi4;
    blacklistedKernelModules = [ "sun4i-drm" "drm" "drm_kms_helper" ];
    initrd.availableKernelModules = [ "xhci_pci" "uas" ];
    initrd.kernelModules = [ ];
    kernelModules = [ "br_netfilter"
                      "ip_conntrack"
                      "ip_vs"
                      "ip_vs_rr"
                      "ip_vs_wrr"
                      "ip_vs_sh"
                      "overlay"
                      "nfs"
                      "iscsi_tcp" ];
    extraModulePackages = [ ];

    # Add kernel parameters to enable cgroup v2
    kernelParams = [
      "systemd.unified_cgroup_hierarchy=1"
      "cgroup_enable=memory"
      "cgroup_enable=cpuset"
      "cgroup_memory=1"
    ];
    kernel.sysctl = {
      "net.bridge-nf-call-ip6tables" = 1;
      "net.bridge-nf-call-iptables" = 1;
      "net.ipv4.ip_forward" = 1;
    };

  };

  # hardware.enableRedistributableFirmware = true;

  # fileSystems."/" =
  #   { device = lib.mkDefault "/dev/disk/by-uuid/44444444-4444-4444-8888-888888888888";
  #     fsType = "ext4";
  #   };

  swapDevices = [ ];

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  # powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
}
